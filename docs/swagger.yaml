basePath: /
definitions:
  models.Todo:
    properties:
      description:
        type: string
      id:
        type: integer
      to_list:
        type: string
    type: object
  params.TodoCreate:
    properties:
      description:
        type: string
      to_list:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact:
    email: hacktiv@swagger.io
    name: API Support
  description: This is a API webservice to manage to-do list
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Todo-API
  version: "1.0"
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: Get all todos list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.Todo'
              type: array
            type: array
      summary: Get all todos list
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo with the input payload
      parameters:
      - description: Create todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/params.TodoCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
      summary: Create a todo
      tags:
      - todos
  /todos/{id}:
    get:
      consumes:
      - application/json
      description: Get todo task by id
      parameters:
      - description: get todo task by id
        format: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Get todo list by id
      tags:
      - todos
  /todos/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete todo list by id
      parameters:
      - description: delete todo task by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      summary: Delete a todo list by id
      tags:
      - todos
  /todos/update/{id}:
    put:
      consumes:
      - application/json
      description: Update todo list by id
      parameters:
      - description: update todo task by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
      summary: Update a todo list by id
      tags:
      - todos
swagger: "2.0"
